<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="Opeq_CallCenterDataSet1" targetNamespace="http://tempuri.org/Opeq_CallCenterDataSet1.xsd" xmlns:mstns="http://tempuri.org/Opeq_CallCenterDataSet1.xsd" xmlns="http://tempuri.org/Opeq_CallCenterDataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="Opeq_CallCenterConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="Opeq_CallCenterConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Opeq_CallCenter.Properties.Settings.GlobalReference.Default.Opeq_CallCenterConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AdminTableAdapter" GeneratorDataComponentClassName="AdminTableAdapter" Name="Admin" UserDataComponentName="AdminTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Opeq_CallCenterConnectionString (Settings)" DbObjectName="Opeq_CallCenter.dbo.Admin" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Admin] WHERE (([admin_id] = @Original_admin_id) AND ([admin_name] = @Original_admin_name) AND ([password] = @Original_password))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_admin_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="admin_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_admin_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="admin_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Admin] ([admin_id], [admin_name], [password]) VALUES (@admin_id, @admin_name, @password);
SELECT admin_id, admin_name, password FROM Admin WHERE (admin_id = @admin_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@admin_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="admin_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@admin_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="admin_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT admin_id, admin_name, password FROM dbo.Admin</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Admin] SET [admin_id] = @admin_id, [admin_name] = @admin_name, [password] = @password WHERE (([admin_id] = @Original_admin_id) AND ([admin_name] = @Original_admin_name) AND ([password] = @Original_password));
SELECT admin_id, admin_name, password FROM Admin WHERE (admin_id = @admin_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@admin_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="admin_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@admin_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="admin_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_admin_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="admin_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_admin_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="admin_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="admin_id" DataSetColumn="admin_id" />
              <Mapping SourceColumn="admin_name" DataSetColumn="admin_name" />
              <Mapping SourceColumn="password" DataSetColumn="password" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="EmployeeTableAdapter" GeneratorDataComponentClassName="EmployeeTableAdapter" Name="Employee" UserDataComponentName="EmployeeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Opeq_CallCenterConnectionString (Settings)" DbObjectName="Opeq_CallCenter.dbo.Employee" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Employee] WHERE (([employee_id] = @Original_employee_id) AND ([employee_name] = @Original_employee_name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_employee_id" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="employee_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_employee_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="employee_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Employee] ([employee_name]) VALUES (@employee_name);
SELECT employee_id, employee_name FROM Employee WHERE (employee_id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@employee_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="employee_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT employee_id, employee_name FROM dbo.Employee</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Employee] SET [employee_name] = @employee_name WHERE (([employee_id] = @Original_employee_id) AND ([employee_name] = @Original_employee_name));
SELECT employee_id, employee_name FROM Employee WHERE (employee_id = @employee_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@employee_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="employee_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_employee_id" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="employee_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_employee_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="employee_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="employee_id" ColumnName="employee_id" DataSourceName="Opeq_CallCenter.dbo.Employee" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@employee_id" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="employee_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="employee_id" DataSetColumn="employee_id" />
              <Mapping SourceColumn="employee_name" DataSetColumn="employee_name" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="Opeq_CallCenterDataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="Opeq_CallCenterDataSet1" msprop:Generator_DataSetName="Opeq_CallCenterDataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Admin" msprop:Generator_RowEvHandlerName="AdminRowChangeEventHandler" msprop:Generator_RowDeletedName="AdminRowDeleted" msprop:Generator_RowDeletingName="AdminRowDeleting" msprop:Generator_RowEvArgName="AdminRowChangeEvent" msprop:Generator_TablePropName="Admin" msprop:Generator_RowChangedName="AdminRowChanged" msprop:Generator_RowChangingName="AdminRowChanging" msprop:Generator_TableClassName="AdminDataTable" msprop:Generator_RowClassName="AdminRow" msprop:Generator_TableVarName="tableAdmin" msprop:Generator_UserTableName="Admin">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="admin_id" msprop:Generator_ColumnPropNameInRow="admin_id" msprop:Generator_ColumnPropNameInTable="admin_idColumn" msprop:Generator_ColumnVarNameInTable="columnadmin_id" msprop:Generator_UserColumnName="admin_id" type="xs:int" />
              <xs:element name="admin_name" msprop:Generator_ColumnPropNameInRow="admin_name" msprop:Generator_ColumnPropNameInTable="admin_nameColumn" msprop:Generator_ColumnVarNameInTable="columnadmin_name" msprop:Generator_UserColumnName="admin_name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="password" msprop:Generator_ColumnPropNameInRow="password" msprop:Generator_ColumnPropNameInTable="passwordColumn" msprop:Generator_ColumnVarNameInTable="columnpassword" msprop:Generator_UserColumnName="password">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Employee" msprop:Generator_RowEvHandlerName="EmployeeRowChangeEventHandler" msprop:Generator_RowDeletedName="EmployeeRowDeleted" msprop:Generator_RowDeletingName="EmployeeRowDeleting" msprop:Generator_RowEvArgName="EmployeeRowChangeEvent" msprop:Generator_TablePropName="Employee" msprop:Generator_RowChangedName="EmployeeRowChanged" msprop:Generator_RowChangingName="EmployeeRowChanging" msprop:Generator_TableClassName="EmployeeDataTable" msprop:Generator_RowClassName="EmployeeRow" msprop:Generator_TableVarName="tableEmployee" msprop:Generator_UserTableName="Employee">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="employee_id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="employee_id" msprop:Generator_ColumnPropNameInTable="employee_idColumn" msprop:Generator_ColumnVarNameInTable="columnemployee_id" msprop:Generator_UserColumnName="employee_id" type="xs:long" />
              <xs:element name="employee_name" msprop:Generator_ColumnPropNameInRow="employee_name" msprop:Generator_ColumnPropNameInTable="employee_nameColumn" msprop:Generator_ColumnVarNameInTable="columnemployee_name" msprop:Generator_UserColumnName="employee_name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Admin" />
      <xs:field xpath="mstns:admin_id" />
    </xs:unique>
    <xs:unique name="Employee_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Employee" />
      <xs:field xpath="mstns:employee_id" />
    </xs:unique>
  </xs:element>
</xs:schema>